[{"/home/pius/Downloads/movies2/SkillSwapHub/src/index.js":"1","/home/pius/Downloads/movies2/SkillSwapHub/src/App.js":"2","/home/pius/Downloads/movies2/SkillSwapHub/src/reportWebVitals.js":"3","/home/pius/Downloads/movies2/SkillSwapHub/src/SkillSeekerDashboard.js":"4","/home/pius/Downloads/movies2/SkillSwapHub/src/Login.js":"5","/home/pius/Downloads/movies2/SkillSwapHub/src/SkillProvider.js":"6","/home/pius/SkillSwapHub/src/index.js":"7","/home/pius/SkillSwapHub/src/App.js":"8","/home/pius/SkillSwapHub/src/reportWebVitals.js":"9","/home/pius/SkillSwapHub/src/Login.js":"10","/home/pius/SkillSwapHub/src/SkillSeekerDashboard.js":"11","/home/pius/SkillSwapHub/src/SkillProvider.js":"12","/home/pius/Not-Netflix/src/components/SkillSwapHub/src/index.js":"13","/home/pius/Not-Netflix/src/components/SkillSwapHub/src/App.js":"14","/home/pius/Not-Netflix/src/components/SkillSwapHub/src/reportWebVitals.js":"15","/home/pius/Not-Netflix/src/components/SkillSwapHub/src/Login.js":"16","/home/pius/Not-Netflix/src/components/SkillSwapHub/src/SkillSeekerDashboard.js":"17","/home/pius/Not-Netflix/src/components/SkillSwapHub/src/SkillProvider.js":"18"},{"size":535,"mtime":1696609712538,"results":"19","hashOfConfig":"20"},{"size":936,"mtime":1696609712538,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1696609712538,"results":"22","hashOfConfig":"20"},{"size":5208,"mtime":1696618501872,"results":"23","hashOfConfig":"20"},{"size":2162,"mtime":1696619417436,"results":"24","hashOfConfig":"20"},{"size":6274,"mtime":1696619626603,"results":"25","hashOfConfig":"20"},{"size":535,"mtime":1696636816187,"results":"26","hashOfConfig":"27"},{"size":1719,"mtime":1696637816434,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1696636816187,"results":"29","hashOfConfig":"27"},{"size":2661,"mtime":1696637868948,"results":"30","hashOfConfig":"27"},{"size":5208,"mtime":1696636816187,"results":"31","hashOfConfig":"27"},{"size":6274,"mtime":1696636816187,"results":"32","hashOfConfig":"27"},{"size":535,"mtime":1696953563813,"results":"33","hashOfConfig":"34"},{"size":1719,"mtime":1696953563813,"results":"35","hashOfConfig":"34"},{"size":362,"mtime":1696953563813,"results":"36","hashOfConfig":"34"},{"size":2661,"mtime":1696953563813,"results":"37","hashOfConfig":"34"},{"size":5208,"mtime":1696953563813,"results":"38","hashOfConfig":"34"},{"size":6274,"mtime":1696953563813,"results":"39","hashOfConfig":"34"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4ivc2k",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1aeidh0",{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b9vwwc",{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/pius/Downloads/movies2/SkillSwapHub/src/index.js",[],[],"/home/pius/Downloads/movies2/SkillSwapHub/src/App.js",[],[],"/home/pius/Downloads/movies2/SkillSwapHub/src/reportWebVitals.js",[],[],"/home/pius/Downloads/movies2/SkillSwapHub/src/SkillSeekerDashboard.js",["95"],[],"import React, { useState, useEffect } from 'react';\nimport './SkillSeekerDashboard.css'; // Import the CSS file\nimport { useTable, useSortBy, useGlobalFilter } from 'react-table';\n\nfunction SkillSeekerDashboard() {\n  const [serviceRequest, setServiceRequest] = useState({\n    title: '',\n    description: '',\n    location: '',\n    status: '',\n  });\n\n  const [providers, setProviders] = useState([]);\n\n  useEffect(() => {\n    fetch('https://skillswap-0fqo.onrender.com/service-providers')\n      .then((response) => response.json())\n      .then((data) => {\n        setProviders(data);\n      })\n      .catch((error) => {\n        console.error('An error occurred:', error);\n      });\n  }, []);\n\n  const data = React.useMemo(() => providers, [providers]);\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'ID',\n        accessor: 'id',\n      },\n      {\n        Header: 'Full Name',\n        accessor: 'fullname',\n      },\n      {\n        Header: 'Skills',\n        accessor: 'skills',\n      },\n      {\n        Header: 'Experience',\n        accessor: 'experience',\n      },\n      {\n        Header: 'Availability',\n        accessor: 'availability',\n      },\n    ],\n    []\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state,\n    setGlobalFilter,\n  } = useTable(\n    {\n      columns,\n      data,\n    },\n    useGlobalFilter,\n    useSortBy\n  );\n\n  const { globalFilter } = state;\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setServiceRequest({ ...serviceRequest, [name]: value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    fetch('https://skillswap-0fqo.onrender.com/service-request', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(serviceRequest),\n    })\n      .then((response) => {\n        if (response.ok) {\n          alert('Service request created successfully');\n          setServiceRequest({\n            title: '',\n            description: '',\n            location: '',\n            status: '',\n          });\n        } else {\n          alert('Service request creation failed');\n        }\n      })\n      .catch((error) => {\n        console.error('An error occurred:', error);\n      });\n  };\n\n  return (\n    <div className=\"skill-seeker-dashboard\">\n    <div className=\"sidebar\">\n      <ul>\n        <li className=\"add-cv\">\n          <div className=\"sidebar-option\">\n            <span className=\"sidebar-icon\">âž•</span> ADD CV\n          </div>\n        </li>\n        <li className=\"add-profile-photo\">\n          <div className=\"sidebar-option\">\n            <span className=\"sidebar-icon\">ðŸ“·</span> ADD PROFILE PHOTO\n          </div>\n        </li>\n        <li className=\"messaging\">\n          <div className=\"sidebar-option\">\n            <span className=\"sidebar-icon\">ðŸ’¬</span> MESSAGING\n          </div>\n        </li>\n        <li className=\"contact-us\">\n          <div className=\"sidebar-option\">\n            <span className=\"sidebar-icon\">ðŸ“ž</span> CONTACT US\n          </div>\n        </li>\n        {/* Add more sidebar options here */}\n      </ul>\n    </div>\n      <div className=\"content\">\n        <form onSubmit={handleSubmit} className=\"service-request-form\">\n          {/* Your form inputs go here */}\n        </form>\n\n        <div className=\"table-container\">\n          <input\n            type=\"text\"\n            value={globalFilter || ''}\n            onChange={(e) => setGlobalFilter(e.target.value)}\n            placeholder=\"Search by Full Name...\"\n            className=\"search-input\"\n          />\n          <table {...getTableProps()} className=\"provider-table\">\n            <thead>\n              {headerGroups.map((headerGroup) => (\n                <tr {...headerGroup.getHeaderGroupProps()}>\n                  {headerGroup.headers.map((column) => (\n                    <th\n                      {...column.getHeaderProps(\n                        column.getSortByToggleProps()\n                      )}\n                    >\n                      {column.render('Header')}\n                      <span>\n                        {column.isSorted\n                          ? column.isSortedDesc\n                            ? ' ðŸ”½'\n                            : ' ðŸ”¼'\n                          : ''}\n                      </span>\n                    </th>\n                  ))}\n                </tr>\n              ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n              {rows.map((row) => {\n                prepareRow(row);\n                return (\n                  <tr {...row.getRowProps()} className=\"provider-row\">\n                    {row.cells.map((cell) => {\n                      return (\n                        <td\n                          {...cell.getCellProps()}\n                          className=\"provider-cell\"\n                        >\n                          {cell.render('Cell')}\n                        </td>\n                      );\n                    })}\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SkillSeekerDashboard;\n","/home/pius/Downloads/movies2/SkillSwapHub/src/Login.js",[],[],"/home/pius/Downloads/movies2/SkillSwapHub/src/SkillProvider.js",[],[],"/home/pius/SkillSwapHub/src/index.js",[],[],"/home/pius/SkillSwapHub/src/App.js",[],[],"/home/pius/SkillSwapHub/src/reportWebVitals.js",[],[],"/home/pius/SkillSwapHub/src/Login.js",[],[],"/home/pius/SkillSwapHub/src/SkillSeekerDashboard.js",["96"],[],"/home/pius/SkillSwapHub/src/SkillProvider.js",[],[],"/home/pius/Not-Netflix/src/components/SkillSwapHub/src/index.js",[],[],"/home/pius/Not-Netflix/src/components/SkillSwapHub/src/App.js",[],[],"/home/pius/Not-Netflix/src/components/SkillSwapHub/src/reportWebVitals.js",[],[],"/home/pius/Not-Netflix/src/components/SkillSwapHub/src/Login.js",[],[],"/home/pius/Not-Netflix/src/components/SkillSwapHub/src/SkillSeekerDashboard.js",["97"],[],"/home/pius/Not-Netflix/src/components/SkillSwapHub/src/SkillProvider.js",[],[],{"ruleId":"98","severity":1,"message":"99","line":72,"column":9,"nodeType":"100","messageId":"101","endLine":72,"endColumn":21},{"ruleId":"98","severity":1,"message":"99","line":72,"column":9,"nodeType":"100","messageId":"101","endLine":72,"endColumn":21},{"ruleId":"98","severity":1,"message":"99","line":72,"column":9,"nodeType":"100","messageId":"101","endLine":72,"endColumn":21},"no-unused-vars","'handleChange' is assigned a value but never used.","Identifier","unusedVar"]